Terminals unused in grammar

    BOOLEAN_LITERAL
    DOT
    EXPR
    COMMENT
    UNKNOWN_TOKEN
    TOKEN_EOF


State 39 conflicts: 1 shift/reduce


Grammar

    0 $accept: Prog $end

    1 Prog: ε
    2     | Body Prog

    3 Body: Declaration SEMICOLON
    4     | Assignment SEMICOLON
    5     | Expression SEMICOLON
    6     | PrintStatement SEMICOLON
    7     | Statement
    8     | ReturnStatement

    9 Declaration: KW_VAR IDENTIFIER
   10            | KW_VAR IDENTIFIER ASSIGN Expression
   11            | KW_VAR IDENTIFIER ASSIGN FunctionDef

   12 ReturnStatement: KW_RETURN Expression

   13 PrintStatement: KW_PRINT Expression

   14 Assignment: IDENTIFIER ASSIGN Expression

   15 Expression: IDENTIFIER
   16           | LPAREN Expression RPAREN
   17           | Relation
   18           | Value
   19           | FunctionCall
   20           | Calc
   21           | ArrayAccess

   22 ArrayAccess: Expression LBRACK Expression RBRACK

   23 Relation: Expression LT Expression
   24         | Expression LTEQ Expression
   25         | Expression GT Expression
   26         | Expression GTEQ Expression
   27         | Expression EQ Expression
   28         | Expression TOKEN_AND Expression
   29         | Expression TOKEN_OR Expression
   30         | Expression TOKEN_XOR Expression
   31         | TOKEN_NOT Expression

   32 Calc: Expression PLUS Expression
   33     | Expression MINUS Expression
   34     | Expression MULT Expression
   35     | Expression DIV Expression

   36 Value: STRING
   37      | INTEGER_LITERAL
   38      | REAL_LITERAL
   39      | KW_TRUE
   40      | KW_FALSE
   41      | ArrayValue
   42      | DictValue

   43 ArrayValue: LBRACK ArrayValues RBRACK

   44 DictValue: LBRACE DictValues RBRACE

   45 DictValues: ε
   46           | Assignment COMMA DictValues

   47 ArrayValues: ε
   48            | Expression COMMA ArrayValues

   49 FunctionDef: KW_FUNCT LPAREN Params RPAREN KW_IS Body KW_END

   50 FunctionCall: IDENTIFIER LPAREN Args RPAREN

   51 Params: ε
   52       | IDENTIFIER COMMA Params

   53 Args: ε
   54     | Expression COMMA Args

   55 Statement: IfStatement
   56          | ForStatement
   57          | WhileStatement

   58 IfStatement: KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END

   60 ForStatement: KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END

   61 WhileStatement: KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    KW_IF (258) 58 59
    KW_IS (259) 49
    KW_VAR (260) 9 10 11
    KW_END (261) 49 58 59 60 61
    KW_TRUE (262) 39
    KW_FALSE (263) 40
    KW_THEN (264) 58 59
    KW_ELSE (265) 59
    KW_FOR (266) 60
    KW_LOOP (267) 60 61
    KW_IN (268) 60
    KW_WHILE (269) 61
    KW_FUNCT (270) 49
    KW_RETURN (271) 12
    KW_PRINT (272) 13
    IDENTIFIER (273) 9 10 11 14 15 50 52 60
    BOOLEAN_LITERAL (274)
    LPAREN (275) 16 49 50 58 59 60 61
    RPAREN (276) 16 49 50 58 59 60 61
    LBRACE (277) 44
    RBRACE (278) 44
    LBRACK (279) 22 43
    RBRACK (280) 22 43
    SEMICOLON (281) 3 4 5 6
    COMMA (282) 46 48 52 54
    DOT (283)
    EQ (284) 27
    ASSIGN (285) 10 11 14
    GT (286) 25
    LT (287) 23
    LTEQ (288) 24
    GTEQ (289) 26
    PLUS (290) 32
    MINUS (291) 33
    MULT (292) 34
    DIV (293) 35
    EXPR (294)
    TOKEN_OR (295) 29
    TOKEN_AND (296) 28
    TOKEN_XOR (297) 30
    TOKEN_NOT (298) 31
    INTEGER_LITERAL (299) 37
    REAL_LITERAL (300) 38
    COMMENT (301)
    STRING (302) 36
    UNKNOWN_TOKEN (303)
    TOKEN_EOF (304)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    Prog (51)
        on left: 1 2
        on right: 0 2
    Body (52)
        on left: 3 4 5 6 7 8
        on right: 2 49 58 59 60 61
    Declaration (53)
        on left: 9 10 11
        on right: 3
    ReturnStatement (54)
        on left: 12
        on right: 8
    PrintStatement (55)
        on left: 13
        on right: 6
    Assignment (56)
        on left: 14
        on right: 4 46
    Expression (57)
        on left: 15 16 17 18 19 20 21
        on right: 5 10 12 13 14 16 22 23 24 25 26 27 28 29 30 31 32 33 34 35 48 54 58 59 60 61
    ArrayAccess (58)
        on left: 22
        on right: 21
    Relation (59)
        on left: 23 24 25 26 27 28 29 30 31
        on right: 17
    Calc (60)
        on left: 32 33 34 35
        on right: 20
    Value (61)
        on left: 36 37 38 39 40 41 42
        on right: 18
    ArrayValue (62)
        on left: 43
        on right: 41
    DictValue (63)
        on left: 44
        on right: 42
    DictValues (64)
        on left: 45 46
        on right: 44 46
    ArrayValues (65)
        on left: 47 48
        on right: 43 48
    FunctionDef (66)
        on left: 49
        on right: 11
    FunctionCall (67)
        on left: 50
        on right: 19
    Params (68)
        on left: 51 52
        on right: 49 52
    Args (69)
        on left: 53 54
        on right: 50 54
    Statement (70)
        on left: 55 56 57
        on right: 7
    IfStatement (71)
        on left: 58 59
        on right: 55
    ForStatement (72)
        on left: 60
        on right: 56
    WhileStatement (73)
        on left: 61
        on right: 57


State 0

    0 $accept: • Prog $end
    1 Prog: ε •  [$end]
    2     | • Body Prog
    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    $default  reduce using rule 1 (Prog)

    Prog             go to state 17
    Body             go to state 18
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 1

   58 IfStatement: KW_IF • LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | KW_IF • LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END

    LPAREN  shift, and go to state 35


State 2

    9 Declaration: KW_VAR • IDENTIFIER
   10            | KW_VAR • IDENTIFIER ASSIGN Expression
   11            | KW_VAR • IDENTIFIER ASSIGN FunctionDef

    IDENTIFIER  shift, and go to state 36


State 3

   39 Value: KW_TRUE •

    $default  reduce using rule 39 (Value)


State 4

   40 Value: KW_FALSE •

    $default  reduce using rule 40 (Value)


State 5

   60 ForStatement: KW_FOR • LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END

    LPAREN  shift, and go to state 37


State 6

   61 WhileStatement: KW_WHILE • LPAREN Expression RPAREN KW_LOOP Body KW_END

    LPAREN  shift, and go to state 38


State 7

   12 ReturnStatement: KW_RETURN • Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 40
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 8

   13 PrintStatement: KW_PRINT • Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 41
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 9

   14 Assignment: IDENTIFIER • ASSIGN Expression
   15 Expression: IDENTIFIER •  [LBRACK, SEMICOLON, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_OR, TOKEN_AND, TOKEN_XOR]
   50 FunctionCall: IDENTIFIER • LPAREN Args RPAREN

    LPAREN  shift, and go to state 42
    ASSIGN  shift, and go to state 43

    $default  reduce using rule 15 (Expression)


State 10

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   16           | LPAREN • Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 44
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 11

   14 Assignment: • IDENTIFIER ASSIGN Expression
   44 DictValue: LBRACE • DictValues RBRACE
   45 DictValues: ε •  [RBRACE]
   46           | • Assignment COMMA DictValues

    IDENTIFIER  shift, and go to state 45

    $default  reduce using rule 45 (DictValues)

    Assignment  go to state 46
    DictValues  go to state 47


State 12

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   43           | LBRACK • ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   47 ArrayValues: ε •  [RBRACK]
   48            | • Expression COMMA ArrayValues
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    $default  reduce using rule 47 (ArrayValues)

    Expression    go to state 48
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    ArrayValues   go to state 49
    FunctionCall  go to state 30


State 13

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   31         | TOKEN_NOT • Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 50
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 14

   37 Value: INTEGER_LITERAL •

    $default  reduce using rule 37 (Value)


State 15

   38 Value: REAL_LITERAL •

    $default  reduce using rule 38 (Value)


State 16

   36 Value: STRING •

    $default  reduce using rule 36 (Value)


State 17

    0 $accept: Prog • $end

    $end  shift, and go to state 51


State 18

    1 Prog: ε •  [$end]
    2     | • Body Prog
    2     | Body • Prog
    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    $default  reduce using rule 1 (Prog)

    Prog             go to state 52
    Body             go to state 18
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 19

    3 Body: Declaration • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 20

    8 Body: ReturnStatement •

    $default  reduce using rule 8 (Body)


State 21

    6 Body: PrintStatement • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 22

    4 Body: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 23

    5 Body: Expression • SEMICOLON
   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    SEMICOLON  shift, and go to state 57
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 24

   21 Expression: ArrayAccess •

    $default  reduce using rule 21 (Expression)


State 25

   17 Expression: Relation •

    $default  reduce using rule 17 (Expression)


State 26

   20 Expression: Calc •

    $default  reduce using rule 20 (Expression)


State 27

   18 Expression: Value •

    $default  reduce using rule 18 (Expression)


State 28

   41 Value: ArrayValue •

    $default  reduce using rule 41 (Value)


State 29

   42 Value: DictValue •

    $default  reduce using rule 42 (Value)


State 30

   19 Expression: FunctionCall •

    $default  reduce using rule 19 (Expression)


State 31

    7 Body: Statement •

    $default  reduce using rule 7 (Body)


State 32

   55 Statement: IfStatement •

    $default  reduce using rule 55 (Statement)


State 33

   56 Statement: ForStatement •

    $default  reduce using rule 56 (Statement)


State 34

   57 Statement: WhileStatement •

    $default  reduce using rule 57 (Statement)


State 35

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   58 IfStatement: KW_IF LPAREN • Expression RPAREN KW_THEN Body KW_END
   59            | KW_IF LPAREN • Expression RPAREN KW_THEN Body KW_ELSE Body KW_END

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 70
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 36

    9 Declaration: KW_VAR IDENTIFIER •  [SEMICOLON]
   10            | KW_VAR IDENTIFIER • ASSIGN Expression
   11            | KW_VAR IDENTIFIER • ASSIGN FunctionDef

    ASSIGN  shift, and go to state 71

    $default  reduce using rule 9 (Declaration)


State 37

   60 ForStatement: KW_FOR LPAREN • IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END

    IDENTIFIER  shift, and go to state 72


State 38

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   61 WhileStatement: KW_WHILE LPAREN • Expression RPAREN KW_LOOP Body KW_END

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 73
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 39

   15 Expression: IDENTIFIER •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, LBRACK, RBRACK, SEMICOLON, COMMA, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_OR, TOKEN_AND, TOKEN_XOR, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   50 FunctionCall: IDENTIFIER • LPAREN Args RPAREN

    LPAREN  shift, and go to state 42

    LPAREN    [reduce using rule 15 (Expression)]
    $default  reduce using rule 15 (Expression)

    shift/reduce conflict on token LPAREN:
       15 Expression: IDENTIFIER •
       50 FunctionCall: IDENTIFIER • LPAREN Args RPAREN
      First example: KW_RETURN IDENTIFIER • LPAREN Args RPAREN Prog $end
      Shift derivation
        $accept
        ↳ 0: Prog                                                                  $end
             ↳ 2: ReturnStatement                                             Prog
                  ↳ 12: KW_RETURN Expression
                                  ↳ 19: FunctionCall
                                        ↳ 50: IDENTIFIER • LPAREN Args RPAREN
      Second example: KW_RETURN IDENTIFIER • LPAREN Expression RPAREN SEMICOLON Prog $end
      Reduce derivation
        $accept
        ↳ 0: Prog                                                                                                 $end
             ↳ 2: Body                                    Prog
                  ↳ 8: ReturnStatement                    ↳ 2: Body                                          Prog
                       ↳ 12: KW_RETURN Expression              ↳ 5: Expression                     SEMICOLON
                                       ↳ 15: IDENTIFIER •           ↳ 16: LPAREN Expression RPAREN



State 40

   12 ReturnStatement: KW_RETURN Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, LBRACE, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 12 (ReturnStatement)

    Conflict between rule 12 and token LBRACK resolved as shift (KW_RETURN < LBRACK).


State 41

   13 PrintStatement: KW_PRINT Expression •  [SEMICOLON]
   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 13 (PrintStatement)


State 42

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   50             | IDENTIFIER LPAREN • Args RPAREN
   53 Args: ε •  [RPAREN]
   54     | • Expression COMMA Args

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    $default  reduce using rule 53 (Args)

    Expression    go to state 74
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30
    Args          go to state 75


State 43

   14 Assignment: IDENTIFIER ASSIGN • Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 76
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 44

   16 Expression: LPAREN Expression • RPAREN
   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    RPAREN     shift, and go to state 77
    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 45

   14 Assignment: IDENTIFIER • ASSIGN Expression

    ASSIGN  shift, and go to state 43


State 46

   46 DictValues: Assignment • COMMA DictValues

    COMMA  shift, and go to state 78


State 47

   44 DictValue: LBRACE DictValues • RBRACE

    RBRACE  shift, and go to state 79


State 48

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression
   48 ArrayValues: Expression • COMMA ArrayValues

    LBRACK     shift, and go to state 56
    COMMA      shift, and go to state 80
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 49

   43 ArrayValue: LBRACK ArrayValues • RBRACK

    RBRACK  shift, and go to state 81


State 50

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   31         | TOKEN_NOT Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 31 (Relation)

    Conflict between rule 31 and token LBRACK resolved as shift (TOKEN_NOT < LBRACK).
    Conflict between rule 31 and token EQ resolved as reduce (EQ < TOKEN_NOT).
    Conflict between rule 31 and token GT resolved as reduce (GT < TOKEN_NOT).
    Conflict between rule 31 and token LT resolved as reduce (LT < TOKEN_NOT).
    Conflict between rule 31 and token LTEQ resolved as reduce (LTEQ < TOKEN_NOT).
    Conflict between rule 31 and token GTEQ resolved as reduce (GTEQ < TOKEN_NOT).
    Conflict between rule 31 and token PLUS resolved as reduce (PLUS < TOKEN_NOT).
    Conflict between rule 31 and token MINUS resolved as reduce (MINUS < TOKEN_NOT).
    Conflict between rule 31 and token MULT resolved as reduce (MULT < TOKEN_NOT).
    Conflict between rule 31 and token DIV resolved as reduce (DIV < TOKEN_NOT).
    Conflict between rule 31 and token TOKEN_OR resolved as shift (TOKEN_NOT < TOKEN_OR).
    Conflict between rule 31 and token TOKEN_AND resolved as shift (TOKEN_NOT < TOKEN_AND).
    Conflict between rule 31 and token TOKEN_XOR resolved as shift (TOKEN_NOT < TOKEN_XOR).


State 51

    0 $accept: Prog $end •

    $default  accept


State 52

    2 Prog: Body Prog •

    $default  reduce using rule 2 (Prog)


State 53

    3 Body: Declaration SEMICOLON •

    $default  reduce using rule 3 (Body)


State 54

    6 Body: PrintStatement SEMICOLON •

    $default  reduce using rule 6 (Body)


State 55

    4 Body: Assignment SEMICOLON •

    $default  reduce using rule 4 (Body)


State 56

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   22            | Expression LBRACK • Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 82
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 57

    5 Body: Expression SEMICOLON •

    $default  reduce using rule 5 (Body)


State 58

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   27         | Expression EQ • Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 83
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 59

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   25         | Expression GT • Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 84
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 60

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   23         | Expression LT • Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 85
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 61

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   24         | Expression LTEQ • Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 86
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 62

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   26         | Expression GTEQ • Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 87
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 63

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   32     | Expression PLUS • Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 88
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 64

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   33     | Expression MINUS • Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 89
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 65

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   34     | Expression MULT • Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 90
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 66

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   35     | Expression DIV • Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 91
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 67

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   29         | Expression TOKEN_OR • Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 92
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 68

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   28         | Expression TOKEN_AND • Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 93
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 69

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   30         | Expression TOKEN_XOR • Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 94
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 70

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression
   58 IfStatement: KW_IF LPAREN Expression • RPAREN KW_THEN Body KW_END
   59            | KW_IF LPAREN Expression • RPAREN KW_THEN Body KW_ELSE Body KW_END

    RPAREN     shift, and go to state 95
    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 71

   10 Declaration: KW_VAR IDENTIFIER ASSIGN • Expression
   11            | KW_VAR IDENTIFIER ASSIGN • FunctionDef
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   49 FunctionDef: • KW_FUNCT LPAREN Params RPAREN KW_IS Body KW_END
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FUNCT         shift, and go to state 96
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 97
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionDef   go to state 98
    FunctionCall  go to state 30


State 72

   60 ForStatement: KW_FOR LPAREN IDENTIFIER • KW_IN Expression RPAREN KW_LOOP Body KW_END

    KW_IN  shift, and go to state 99


State 73

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression
   61 WhileStatement: KW_WHILE LPAREN Expression • RPAREN KW_LOOP Body KW_END

    RPAREN     shift, and go to state 100
    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 74

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression
   54 Args: Expression • COMMA Args

    LBRACK     shift, and go to state 56
    COMMA      shift, and go to state 101
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 75

   50 FunctionCall: IDENTIFIER LPAREN Args • RPAREN

    RPAREN  shift, and go to state 102


State 76

   14 Assignment: IDENTIFIER ASSIGN Expression •  [SEMICOLON, COMMA]
   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 14 (Assignment)


State 77

   16 Expression: LPAREN Expression RPAREN •

    $default  reduce using rule 16 (Expression)


State 78

   14 Assignment: • IDENTIFIER ASSIGN Expression
   45 DictValues: ε •  [RBRACE]
   46           | • Assignment COMMA DictValues
   46           | Assignment COMMA • DictValues

    IDENTIFIER  shift, and go to state 45

    $default  reduce using rule 45 (DictValues)

    Assignment  go to state 46
    DictValues  go to state 103


State 79

   44 DictValue: LBRACE DictValues RBRACE •

    $default  reduce using rule 44 (DictValue)


State 80

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   47 ArrayValues: ε •  [RBRACK]
   48            | • Expression COMMA ArrayValues
   48            | Expression COMMA • ArrayValues
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    $default  reduce using rule 47 (ArrayValues)

    Expression    go to state 48
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    ArrayValues   go to state 104
    FunctionCall  go to state 30


State 81

   43 ArrayValue: LBRACK ArrayValues RBRACK •

    $default  reduce using rule 43 (ArrayValue)


State 82

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   22            | Expression LBRACK Expression • RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    RBRACK     shift, and go to state 105
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 83

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   27         | Expression EQ Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 27 (Relation)

    Conflict between rule 27 and token LBRACK resolved as shift (EQ < LBRACK).
    Conflict between rule 27 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 27 and token GT resolved as reduce (GT < EQ).
    Conflict between rule 27 and token LT resolved as reduce (LT < EQ).
    Conflict between rule 27 and token LTEQ resolved as reduce (LTEQ < EQ).
    Conflict between rule 27 and token GTEQ resolved as reduce (GTEQ < EQ).
    Conflict between rule 27 and token PLUS resolved as reduce (PLUS < EQ).
    Conflict between rule 27 and token MINUS resolved as reduce (MINUS < EQ).
    Conflict between rule 27 and token MULT resolved as reduce (MULT < EQ).
    Conflict between rule 27 and token DIV resolved as reduce (DIV < EQ).
    Conflict between rule 27 and token TOKEN_OR resolved as shift (EQ < TOKEN_OR).
    Conflict between rule 27 and token TOKEN_AND resolved as shift (EQ < TOKEN_AND).
    Conflict between rule 27 and token TOKEN_XOR resolved as shift (EQ < TOKEN_XOR).


State 84

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   25         | Expression GT Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 25 (Relation)

    Conflict between rule 25 and token LBRACK resolved as shift (GT < LBRACK).
    Conflict between rule 25 and token EQ resolved as shift (GT < EQ).
    Conflict between rule 25 and token GT resolved as reduce (%left GT).
    Conflict between rule 25 and token LT resolved as reduce (%left LT).
    Conflict between rule 25 and token LTEQ resolved as reduce (%left LTEQ).
    Conflict between rule 25 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 25 and token PLUS resolved as reduce (PLUS < GT).
    Conflict between rule 25 and token MINUS resolved as reduce (MINUS < GT).
    Conflict between rule 25 and token MULT resolved as reduce (MULT < GT).
    Conflict between rule 25 and token DIV resolved as reduce (DIV < GT).
    Conflict between rule 25 and token TOKEN_OR resolved as shift (GT < TOKEN_OR).
    Conflict between rule 25 and token TOKEN_AND resolved as shift (GT < TOKEN_AND).
    Conflict between rule 25 and token TOKEN_XOR resolved as shift (GT < TOKEN_XOR).


State 85

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   23         | Expression LT Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 23 (Relation)

    Conflict between rule 23 and token LBRACK resolved as shift (LT < LBRACK).
    Conflict between rule 23 and token EQ resolved as shift (LT < EQ).
    Conflict between rule 23 and token GT resolved as reduce (%left GT).
    Conflict between rule 23 and token LT resolved as reduce (%left LT).
    Conflict between rule 23 and token LTEQ resolved as reduce (%left LTEQ).
    Conflict between rule 23 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 23 and token PLUS resolved as reduce (PLUS < LT).
    Conflict between rule 23 and token MINUS resolved as reduce (MINUS < LT).
    Conflict between rule 23 and token MULT resolved as reduce (MULT < LT).
    Conflict between rule 23 and token DIV resolved as reduce (DIV < LT).
    Conflict between rule 23 and token TOKEN_OR resolved as shift (LT < TOKEN_OR).
    Conflict between rule 23 and token TOKEN_AND resolved as shift (LT < TOKEN_AND).
    Conflict between rule 23 and token TOKEN_XOR resolved as shift (LT < TOKEN_XOR).


State 86

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   24         | Expression LTEQ Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 24 (Relation)

    Conflict between rule 24 and token LBRACK resolved as shift (LTEQ < LBRACK).
    Conflict between rule 24 and token EQ resolved as shift (LTEQ < EQ).
    Conflict between rule 24 and token GT resolved as reduce (%left GT).
    Conflict between rule 24 and token LT resolved as reduce (%left LT).
    Conflict between rule 24 and token LTEQ resolved as reduce (%left LTEQ).
    Conflict between rule 24 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 24 and token PLUS resolved as reduce (PLUS < LTEQ).
    Conflict between rule 24 and token MINUS resolved as reduce (MINUS < LTEQ).
    Conflict between rule 24 and token MULT resolved as reduce (MULT < LTEQ).
    Conflict between rule 24 and token DIV resolved as reduce (DIV < LTEQ).
    Conflict between rule 24 and token TOKEN_OR resolved as shift (LTEQ < TOKEN_OR).
    Conflict between rule 24 and token TOKEN_AND resolved as shift (LTEQ < TOKEN_AND).
    Conflict between rule 24 and token TOKEN_XOR resolved as shift (LTEQ < TOKEN_XOR).


State 87

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   26         | Expression GTEQ Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 26 (Relation)

    Conflict between rule 26 and token LBRACK resolved as shift (GTEQ < LBRACK).
    Conflict between rule 26 and token EQ resolved as shift (GTEQ < EQ).
    Conflict between rule 26 and token GT resolved as reduce (%left GT).
    Conflict between rule 26 and token LT resolved as reduce (%left LT).
    Conflict between rule 26 and token LTEQ resolved as reduce (%left LTEQ).
    Conflict between rule 26 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 26 and token PLUS resolved as reduce (PLUS < GTEQ).
    Conflict between rule 26 and token MINUS resolved as reduce (MINUS < GTEQ).
    Conflict between rule 26 and token MULT resolved as reduce (MULT < GTEQ).
    Conflict between rule 26 and token DIV resolved as reduce (DIV < GTEQ).
    Conflict between rule 26 and token TOKEN_OR resolved as shift (GTEQ < TOKEN_OR).
    Conflict between rule 26 and token TOKEN_AND resolved as shift (GTEQ < TOKEN_AND).
    Conflict between rule 26 and token TOKEN_XOR resolved as shift (GTEQ < TOKEN_XOR).


State 88

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   32     | Expression PLUS Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, PLUS, MINUS, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 32 (Calc)

    Conflict between rule 32 and token LBRACK resolved as shift (PLUS < LBRACK).
    Conflict between rule 32 and token EQ resolved as shift (PLUS < EQ).
    Conflict between rule 32 and token GT resolved as shift (PLUS < GT).
    Conflict between rule 32 and token LT resolved as shift (PLUS < LT).
    Conflict between rule 32 and token LTEQ resolved as shift (PLUS < LTEQ).
    Conflict between rule 32 and token GTEQ resolved as shift (PLUS < GTEQ).
    Conflict between rule 32 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 32 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 32 and token MULT resolved as shift (PLUS < MULT).
    Conflict between rule 32 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 32 and token TOKEN_OR resolved as shift (PLUS < TOKEN_OR).
    Conflict between rule 32 and token TOKEN_AND resolved as shift (PLUS < TOKEN_AND).
    Conflict between rule 32 and token TOKEN_XOR resolved as shift (PLUS < TOKEN_XOR).


State 89

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   33     | Expression MINUS Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, PLUS, MINUS, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 33 (Calc)

    Conflict between rule 33 and token LBRACK resolved as shift (MINUS < LBRACK).
    Conflict between rule 33 and token EQ resolved as shift (MINUS < EQ).
    Conflict between rule 33 and token GT resolved as shift (MINUS < GT).
    Conflict between rule 33 and token LT resolved as shift (MINUS < LT).
    Conflict between rule 33 and token LTEQ resolved as shift (MINUS < LTEQ).
    Conflict between rule 33 and token GTEQ resolved as shift (MINUS < GTEQ).
    Conflict between rule 33 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 33 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 33 and token MULT resolved as shift (MINUS < MULT).
    Conflict between rule 33 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 33 and token TOKEN_OR resolved as shift (MINUS < TOKEN_OR).
    Conflict between rule 33 and token TOKEN_AND resolved as shift (MINUS < TOKEN_AND).
    Conflict between rule 33 and token TOKEN_XOR resolved as shift (MINUS < TOKEN_XOR).


State 90

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   34     | Expression MULT Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 34 (Calc)

    Conflict between rule 34 and token LBRACK resolved as shift (MULT < LBRACK).
    Conflict between rule 34 and token EQ resolved as shift (MULT < EQ).
    Conflict between rule 34 and token GT resolved as shift (MULT < GT).
    Conflict between rule 34 and token LT resolved as shift (MULT < LT).
    Conflict between rule 34 and token LTEQ resolved as shift (MULT < LTEQ).
    Conflict between rule 34 and token GTEQ resolved as shift (MULT < GTEQ).
    Conflict between rule 34 and token PLUS resolved as reduce (PLUS < MULT).
    Conflict between rule 34 and token MINUS resolved as reduce (MINUS < MULT).
    Conflict between rule 34 and token MULT resolved as reduce (%left MULT).
    Conflict between rule 34 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 34 and token TOKEN_OR resolved as shift (MULT < TOKEN_OR).
    Conflict between rule 34 and token TOKEN_AND resolved as shift (MULT < TOKEN_AND).
    Conflict between rule 34 and token TOKEN_XOR resolved as shift (MULT < TOKEN_XOR).


State 91

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression
   35     | Expression DIV Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, PLUS, MINUS, MULT, DIV, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 35 (Calc)

    Conflict between rule 35 and token LBRACK resolved as shift (DIV < LBRACK).
    Conflict between rule 35 and token EQ resolved as shift (DIV < EQ).
    Conflict between rule 35 and token GT resolved as shift (DIV < GT).
    Conflict between rule 35 and token LT resolved as shift (DIV < LT).
    Conflict between rule 35 and token LTEQ resolved as shift (DIV < LTEQ).
    Conflict between rule 35 and token GTEQ resolved as shift (DIV < GTEQ).
    Conflict between rule 35 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 35 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 35 and token MULT resolved as reduce (%left MULT).
    Conflict between rule 35 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 35 and token TOKEN_OR resolved as shift (DIV < TOKEN_OR).
    Conflict between rule 35 and token TOKEN_AND resolved as shift (DIV < TOKEN_AND).
    Conflict between rule 35 and token TOKEN_XOR resolved as shift (DIV < TOKEN_XOR).


State 92

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   29         | Expression TOKEN_OR Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_OR, TOKEN_XOR, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    TOKEN_AND  shift, and go to state 68

    $default  reduce using rule 29 (Relation)

    Conflict between rule 29 and token LBRACK resolved as shift (TOKEN_OR < LBRACK).
    Conflict between rule 29 and token EQ resolved as reduce (EQ < TOKEN_OR).
    Conflict between rule 29 and token GT resolved as reduce (GT < TOKEN_OR).
    Conflict between rule 29 and token LT resolved as reduce (LT < TOKEN_OR).
    Conflict between rule 29 and token LTEQ resolved as reduce (LTEQ < TOKEN_OR).
    Conflict between rule 29 and token GTEQ resolved as reduce (GTEQ < TOKEN_OR).
    Conflict between rule 29 and token PLUS resolved as reduce (PLUS < TOKEN_OR).
    Conflict between rule 29 and token MINUS resolved as reduce (MINUS < TOKEN_OR).
    Conflict between rule 29 and token MULT resolved as reduce (MULT < TOKEN_OR).
    Conflict between rule 29 and token DIV resolved as reduce (DIV < TOKEN_OR).
    Conflict between rule 29 and token TOKEN_OR resolved as reduce (%left TOKEN_OR).
    Conflict between rule 29 and token TOKEN_AND resolved as shift (TOKEN_OR < TOKEN_AND).
    Conflict between rule 29 and token TOKEN_XOR resolved as reduce (TOKEN_XOR < TOKEN_OR).


State 93

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   28         | Expression TOKEN_AND Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_OR, TOKEN_AND, TOKEN_XOR, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK  shift, and go to state 56

    $default  reduce using rule 28 (Relation)

    Conflict between rule 28 and token LBRACK resolved as shift (TOKEN_AND < LBRACK).
    Conflict between rule 28 and token EQ resolved as reduce (EQ < TOKEN_AND).
    Conflict between rule 28 and token GT resolved as reduce (GT < TOKEN_AND).
    Conflict between rule 28 and token LT resolved as reduce (LT < TOKEN_AND).
    Conflict between rule 28 and token LTEQ resolved as reduce (LTEQ < TOKEN_AND).
    Conflict between rule 28 and token GTEQ resolved as reduce (GTEQ < TOKEN_AND).
    Conflict between rule 28 and token PLUS resolved as reduce (PLUS < TOKEN_AND).
    Conflict between rule 28 and token MINUS resolved as reduce (MINUS < TOKEN_AND).
    Conflict between rule 28 and token MULT resolved as reduce (MULT < TOKEN_AND).
    Conflict between rule 28 and token DIV resolved as reduce (DIV < TOKEN_AND).
    Conflict between rule 28 and token TOKEN_OR resolved as reduce (TOKEN_OR < TOKEN_AND).
    Conflict between rule 28 and token TOKEN_AND resolved as reduce (%left TOKEN_AND).
    Conflict between rule 28 and token TOKEN_XOR resolved as reduce (TOKEN_XOR < TOKEN_AND).


State 94

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   30         | Expression TOKEN_XOR Expression •  [$end, KW_IF, KW_VAR, KW_END, KW_TRUE, KW_FALSE, KW_ELSE, KW_FOR, KW_WHILE, KW_RETURN, KW_PRINT, IDENTIFIER, LPAREN, RPAREN, LBRACE, RBRACK, SEMICOLON, COMMA, EQ, GT, LT, LTEQ, GTEQ, PLUS, MINUS, MULT, DIV, TOKEN_XOR, TOKEN_NOT, INTEGER_LITERAL, REAL_LITERAL, STRING]
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68

    $default  reduce using rule 30 (Relation)

    Conflict between rule 30 and token LBRACK resolved as shift (TOKEN_XOR < LBRACK).
    Conflict between rule 30 and token EQ resolved as reduce (EQ < TOKEN_XOR).
    Conflict between rule 30 and token GT resolved as reduce (GT < TOKEN_XOR).
    Conflict between rule 30 and token LT resolved as reduce (LT < TOKEN_XOR).
    Conflict between rule 30 and token LTEQ resolved as reduce (LTEQ < TOKEN_XOR).
    Conflict between rule 30 and token GTEQ resolved as reduce (GTEQ < TOKEN_XOR).
    Conflict between rule 30 and token PLUS resolved as reduce (PLUS < TOKEN_XOR).
    Conflict between rule 30 and token MINUS resolved as reduce (MINUS < TOKEN_XOR).
    Conflict between rule 30 and token MULT resolved as reduce (MULT < TOKEN_XOR).
    Conflict between rule 30 and token DIV resolved as reduce (DIV < TOKEN_XOR).
    Conflict between rule 30 and token TOKEN_OR resolved as shift (TOKEN_XOR < TOKEN_OR).
    Conflict between rule 30 and token TOKEN_AND resolved as shift (TOKEN_XOR < TOKEN_AND).
    Conflict between rule 30 and token TOKEN_XOR resolved as reduce (%left TOKEN_XOR).


State 95

   58 IfStatement: KW_IF LPAREN Expression RPAREN • KW_THEN Body KW_END
   59            | KW_IF LPAREN Expression RPAREN • KW_THEN Body KW_ELSE Body KW_END

    KW_THEN  shift, and go to state 106


State 96

   49 FunctionDef: KW_FUNCT • LPAREN Params RPAREN KW_IS Body KW_END

    LPAREN  shift, and go to state 107


State 97

   10 Declaration: KW_VAR IDENTIFIER ASSIGN Expression •  [SEMICOLON]
   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression

    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69

    $default  reduce using rule 10 (Declaration)


State 98

   11 Declaration: KW_VAR IDENTIFIER ASSIGN FunctionDef •

    $default  reduce using rule 11 (Declaration)


State 99

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   60 ForStatement: KW_FOR LPAREN IDENTIFIER KW_IN • Expression RPAREN KW_LOOP Body KW_END

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Expression    go to state 108
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30


State 100

   61 WhileStatement: KW_WHILE LPAREN Expression RPAREN • KW_LOOP Body KW_END

    KW_LOOP  shift, and go to state 109


State 101

   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   53 Args: ε •  [RPAREN]
   54     | • Expression COMMA Args
   54     | Expression COMMA • Args

    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    IDENTIFIER       shift, and go to state 39
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    $default  reduce using rule 53 (Args)

    Expression    go to state 74
    ArrayAccess   go to state 24
    Relation      go to state 25
    Calc          go to state 26
    Value         go to state 27
    ArrayValue    go to state 28
    DictValue     go to state 29
    FunctionCall  go to state 30
    Args          go to state 110


State 102

   50 FunctionCall: IDENTIFIER LPAREN Args RPAREN •

    $default  reduce using rule 50 (FunctionCall)


State 103

   46 DictValues: Assignment COMMA DictValues •

    $default  reduce using rule 46 (DictValues)


State 104

   48 ArrayValues: Expression COMMA ArrayValues •

    $default  reduce using rule 48 (ArrayValues)


State 105

   22 ArrayAccess: Expression LBRACK Expression RBRACK •

    $default  reduce using rule 22 (ArrayAccess)


State 106

    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   58            | KW_IF LPAREN Expression RPAREN KW_THEN • Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   59            | KW_IF LPAREN Expression RPAREN KW_THEN • Body KW_ELSE Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Body             go to state 111
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 107

   49 FunctionDef: KW_FUNCT LPAREN • Params RPAREN KW_IS Body KW_END
   51 Params: ε •  [RPAREN]
   52       | • IDENTIFIER COMMA Params

    IDENTIFIER  shift, and go to state 112

    $default  reduce using rule 51 (Params)

    Params  go to state 113


State 108

   22 ArrayAccess: Expression • LBRACK Expression RBRACK
   23 Relation: Expression • LT Expression
   24         | Expression • LTEQ Expression
   25         | Expression • GT Expression
   26         | Expression • GTEQ Expression
   27         | Expression • EQ Expression
   28         | Expression • TOKEN_AND Expression
   29         | Expression • TOKEN_OR Expression
   30         | Expression • TOKEN_XOR Expression
   32 Calc: Expression • PLUS Expression
   33     | Expression • MINUS Expression
   34     | Expression • MULT Expression
   35     | Expression • DIV Expression
   60 ForStatement: KW_FOR LPAREN IDENTIFIER KW_IN Expression • RPAREN KW_LOOP Body KW_END

    RPAREN     shift, and go to state 114
    LBRACK     shift, and go to state 56
    EQ         shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LTEQ       shift, and go to state 61
    GTEQ       shift, and go to state 62
    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MULT       shift, and go to state 65
    DIV        shift, and go to state 66
    TOKEN_OR   shift, and go to state 67
    TOKEN_AND  shift, and go to state 68
    TOKEN_XOR  shift, and go to state 69


State 109

    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END
   61               | KW_WHILE LPAREN Expression RPAREN KW_LOOP • Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Body             go to state 115
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 110

   54 Args: Expression COMMA Args •

    $default  reduce using rule 54 (Args)


State 111

   58 IfStatement: KW_IF LPAREN Expression RPAREN KW_THEN Body • KW_END
   59            | KW_IF LPAREN Expression RPAREN KW_THEN Body • KW_ELSE Body KW_END

    KW_END   shift, and go to state 116
    KW_ELSE  shift, and go to state 117


State 112

   52 Params: IDENTIFIER • COMMA Params

    COMMA  shift, and go to state 118


State 113

   49 FunctionDef: KW_FUNCT LPAREN Params • RPAREN KW_IS Body KW_END

    RPAREN  shift, and go to state 119


State 114

   60 ForStatement: KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN • KW_LOOP Body KW_END

    KW_LOOP  shift, and go to state 120


State 115

   61 WhileStatement: KW_WHILE LPAREN Expression RPAREN KW_LOOP Body • KW_END

    KW_END  shift, and go to state 121


State 116

   58 IfStatement: KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END •

    $default  reduce using rule 58 (IfStatement)


State 117

    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   59            | KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE • Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Body             go to state 122
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 118

   51 Params: ε •  [RPAREN]
   52       | • IDENTIFIER COMMA Params
   52       | IDENTIFIER COMMA • Params

    IDENTIFIER  shift, and go to state 112

    $default  reduce using rule 51 (Params)

    Params  go to state 123


State 119

   49 FunctionDef: KW_FUNCT LPAREN Params RPAREN • KW_IS Body KW_END

    KW_IS  shift, and go to state 124


State 120

    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   60             | KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP • Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Body             go to state 125
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 121

   61 WhileStatement: KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END •

    $default  reduce using rule 61 (WhileStatement)


State 122

   59 IfStatement: KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body • KW_END

    KW_END  shift, and go to state 126


State 123

   52 Params: IDENTIFIER COMMA Params •

    $default  reduce using rule 52 (Params)


State 124

    3 Body: • Declaration SEMICOLON
    4     | • Assignment SEMICOLON
    5     | • Expression SEMICOLON
    6     | • PrintStatement SEMICOLON
    7     | • Statement
    8     | • ReturnStatement
    9 Declaration: • KW_VAR IDENTIFIER
   10            | • KW_VAR IDENTIFIER ASSIGN Expression
   11            | • KW_VAR IDENTIFIER ASSIGN FunctionDef
   12 ReturnStatement: • KW_RETURN Expression
   13 PrintStatement: • KW_PRINT Expression
   14 Assignment: • IDENTIFIER ASSIGN Expression
   15 Expression: • IDENTIFIER
   16           | • LPAREN Expression RPAREN
   17           | • Relation
   18           | • Value
   19           | • FunctionCall
   20           | • Calc
   21           | • ArrayAccess
   22 ArrayAccess: • Expression LBRACK Expression RBRACK
   23 Relation: • Expression LT Expression
   24         | • Expression LTEQ Expression
   25         | • Expression GT Expression
   26         | • Expression GTEQ Expression
   27         | • Expression EQ Expression
   28         | • Expression TOKEN_AND Expression
   29         | • Expression TOKEN_OR Expression
   30         | • Expression TOKEN_XOR Expression
   31         | • TOKEN_NOT Expression
   32 Calc: • Expression PLUS Expression
   33     | • Expression MINUS Expression
   34     | • Expression MULT Expression
   35     | • Expression DIV Expression
   36 Value: • STRING
   37      | • INTEGER_LITERAL
   38      | • REAL_LITERAL
   39      | • KW_TRUE
   40      | • KW_FALSE
   41      | • ArrayValue
   42      | • DictValue
   43 ArrayValue: • LBRACK ArrayValues RBRACK
   44 DictValue: • LBRACE DictValues RBRACE
   49 FunctionDef: KW_FUNCT LPAREN Params RPAREN KW_IS • Body KW_END
   50 FunctionCall: • IDENTIFIER LPAREN Args RPAREN
   55 Statement: • IfStatement
   56          | • ForStatement
   57          | • WhileStatement
   58 IfStatement: • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_END
   59            | • KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END
   60 ForStatement: • KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END
   61 WhileStatement: • KW_WHILE LPAREN Expression RPAREN KW_LOOP Body KW_END

    KW_IF            shift, and go to state 1
    KW_VAR           shift, and go to state 2
    KW_TRUE          shift, and go to state 3
    KW_FALSE         shift, and go to state 4
    KW_FOR           shift, and go to state 5
    KW_WHILE         shift, and go to state 6
    KW_RETURN        shift, and go to state 7
    KW_PRINT         shift, and go to state 8
    IDENTIFIER       shift, and go to state 9
    LPAREN           shift, and go to state 10
    LBRACE           shift, and go to state 11
    LBRACK           shift, and go to state 12
    TOKEN_NOT        shift, and go to state 13
    INTEGER_LITERAL  shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    STRING           shift, and go to state 16

    Body             go to state 127
    Declaration      go to state 19
    ReturnStatement  go to state 20
    PrintStatement   go to state 21
    Assignment       go to state 22
    Expression       go to state 23
    ArrayAccess      go to state 24
    Relation         go to state 25
    Calc             go to state 26
    Value            go to state 27
    ArrayValue       go to state 28
    DictValue        go to state 29
    FunctionCall     go to state 30
    Statement        go to state 31
    IfStatement      go to state 32
    ForStatement     go to state 33
    WhileStatement   go to state 34


State 125

   60 ForStatement: KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body • KW_END

    KW_END  shift, and go to state 128


State 126

   59 IfStatement: KW_IF LPAREN Expression RPAREN KW_THEN Body KW_ELSE Body KW_END •

    $default  reduce using rule 59 (IfStatement)


State 127

   49 FunctionDef: KW_FUNCT LPAREN Params RPAREN KW_IS Body • KW_END

    KW_END  shift, and go to state 129


State 128

   60 ForStatement: KW_FOR LPAREN IDENTIFIER KW_IN Expression RPAREN KW_LOOP Body KW_END •

    $default  reduce using rule 60 (ForStatement)


State 129

   49 FunctionDef: KW_FUNCT LPAREN Params RPAREN KW_IS Body KW_END •

    $default  reduce using rule 49 (FunctionDef)
